version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5
    container_name: training-employment-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-secure_password_change_me}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-training_employment}
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - training-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: training-employment-backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - MONGO_URL=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-secure_password_change_me}@mongodb:27017/${MONGO_DB_NAME:-training_employment}?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret}
      - FRONTEND_URL=${FRONTEND_URL:-https://your-domain.com}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - PORT=8222
    ports:
      - "127.0.0.1:8222:8222"
    depends_on:
      - mongodb
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - training-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: training-employment-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./frontend/dist:/var/www/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - training-network

  # Redis for session management (optional)
  redis:
    image: redis:alpine
    container_name: training-employment-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - training-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  training-network:
    driver: bridge
