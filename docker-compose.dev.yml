services:
  db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://db:27017/mydb
    volumes:
      - ./backend:/app
    command: sh -c "cd /app && python create_admin.py && python populate_dummy_members.py && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
    expose:
      - "5173"
    command: npm run dev -- --host 0.0.0.0 --port 5173
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge